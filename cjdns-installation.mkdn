[[!meta title="Installing cjdns"]]
[[!tag cjdns]]

#Installing cjdns
[[!toc startlevel=2 levels=4]]

Installation and Usage of cjdns. 

##Dependencies
	sudo apt-get install cmake git build-essential

##Compile cjdns
	git clone https://github.com/cjdelisle/cjdns.git cjdns
	cd cjdns
	./do

Upon successful compilation you will see this message: *Build completed successfully, type ./cjdroute to begin setup.*

##Check TUN
	cat /dev/net/tun

If it says...

* "File descriptor in bad state"
	* Good (yes, this is fine)
* "No such file or directory"
	* Create tun:
	* **sudo mkdir /dev/net ; sudo mknod /dev/net/tun c 10 200 && sudo chmod 0666 /dev/net/tun**
	* **cat /dev/net/tun**
* "Permission denied"
	* You're probably using a VPS based on the OpenVS virtualization platform.  TUN/TAP devices are standard protocol, so your provider should know exactly what you need.

##Generate a Configuration File

This step should only be done once, unless it is your intention to have multiple addresses.  **This file should be kept secret, as it holds your private key and passwords.**

	./cjdroute --genconf >> cjdroute.conf

##Configuring cjdns

cjdns uses a [JSON](https://en.wikipedia.org/wiki/JSON)-formatted file generated with **cjdroute --genconf >> cjdroute.conf**.  As such, it is both human and machine-readable and makes configuring cjdns easy.  If you have trouble, validate your JSON:

* &nbsp;**cat cjdroute.conf | python -mjson.tool**

If you use a web validation service, be sure to sanitize your private key and passwords first.

###Adding Nodes

* Add nodes to *connectTo* (You will have to exchange these values with a friend's information)

            // Nodes to connect to.
            "connectTo":
            {
                //optional name
                "96.126.x.x:10000":
                {
                  "password":"null",
                  "authType":1,
                  "trust": 9000,
                  "publicKey":"xxx0.k"
                },
                //optional name
                "173.255.x.x:10000":
                {
                  "password":"null",
                  "authType":1,
                  "trust": 9000,
                  "publicKey":"xxx0.k"
                }
            }

###Finding Nodes

In order to get into the network, you must connect to a person already in the network.  This is required for a number of reasons:

1. A person is less likely to abuse a system in which he or she was personally, in an act of human kindness, given access.
1. cjdns is not intended to overlay the existing internet infrastructure.  In time, each connection should be replaced by a direct physical connection, be it wire, optical cable or radio transmission.
1. Disagreement can be more easily resolved in a 'chain of friends'.

####Joining the cjdns Community

* Internet Relay Chat
	* [irc://irc.efnet.org/#cjdns](irc://irc.efnet.org/#cjdns)
	* [Web Client](http://chat.efnet.org:9090/?channels=%23cjdns&Login=Login)
* Unofficial
	* [Project Meshnet Wiki](http://[fc3a:2804:615a:b34f:abfe:c7d5:65d6:f50c]:90/CJD's_Network_Suite)

###Allowing Others to Connect to You

cjdns supports the use of multiple connection credentials under *authorizedPasswords*.  This allows you to handle multiple users/groups more easily.  Many people recommend creating new credentials for each user you give access, as this makes it easy to identify who is causing problems and remove them without impacting others.  *authorizedPasswords* contains a commented-out section that is simply a correctly formatted object which can be given to a friend and added to his or her *connectTo* section.

    "authorizedPasswords":
    [
        {
            // Adam's Password
            "password": "whateveryouwanttoputhere",
	   "authType": 1,
        },
        {
            // Bill's Password
            "password": "tun0.bill.smith.orange",
	   "authType": 1,
        },
        {
            // Un-Trusted
            "password": "longrandomstringsworkgreat",
	   "authType": 1,
        }
    ],



<hr></hr>
